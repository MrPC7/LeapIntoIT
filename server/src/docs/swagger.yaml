openapi: 3.0.0
info:
  title: LeapIntoIT API
  version: 1.0.0
  description: API documentation for LeapIntoIT backend
servers:
  - url: http://localhost:5000

components:
  schemas:
    Course:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        instructor:
          type: string
        createdAt:
          type: string
          format: date-time
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
    Quiz:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        questions:
          type: array
          items:
            type: object
            properties:
              question:
                type: string
              options:
                type: array
                items:
                  type: string
              answer:
                type: string

paths:
  /api/courses:
    get:
      summary: Get all courses
      responses:
        '200':
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Create a new course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /api/courses/{id}:
    get:
      summary: Get a course by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /api/auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/admin:
    get:
      summary: Admin dashboard
      responses:
        '200':
          description: Admin data
          content:
            application/json:
              schema:
                type: object

  /api/quizzes:
    get:
      summary: Get all quizzes
      responses:
        '200':
          description: List of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quiz'
    post:
      summary: Create a new quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
      responses:
        '201':
          description: Quiz created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'

  /api/quizzes/{id}:
    get:
      summary: Get quiz by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quiz details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'